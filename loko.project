{
  "name": "anonymization_demo",
  "id": "anonymization_demo",
  "description": "",
  "created_on": "22/09/2022, 14:59:45",
  "last_modify": "16/12/2022, 09:39:05",
  "graphs": {
    "main": {
      "nodes": [
        {
          "id": "1e25f288-c431-418e-91e2-09a90940fb05",
          "position": {
            "x": 423.78402044653706,
            "y": 609.0163086483793
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Route",
            "events": null,
            "description": "### Description\nThe ROUTE component is used to create a web server listening on a specific address and a specific HTTP method.\n\n### Input\nThe component has no input.\n\n### Output\nIn this case there is no fixed output format.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "HTTP",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "path",
                  "type": "path",
                  "helper": "Insert a path without '/' at start"
                }
              ],
              "click": null,
              "icon": "RiCloudyFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "path": "anonymize"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 423.78402044653706,
            "y": 609.0163086483793
          },
          "__class__": "Node"
        },
        {
          "id": "35fa6559-7516-4442-8adc-4152e7853020",
          "position": {
            "x": 654.4597734431529,
            "y": 609.267282183731
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "propagate": true,
                "notify_warnings": true,
                "code": "return data.json"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 654.4597734431529,
            "y": 609.267282183731
          },
          "__class__": "Node"
        },
        {
          "id": "d38f454b-a99f-4136-84e1-111e289b5bb1",
          "position": {
            "x": 1117.9231367091368,
            "y": 607.1593190523859
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Response",
            "events": null,
            "description": "### Description\nThe RESPONSE component is used to set the type of response output that should be sent upon receipt of an HTTP request captured by a **Route** component.\n\n### Input\nIn this case there is no fixed input format.\n\n### Output\nThe component has no output.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [],
            "configured": true,
            "options": {
              "group": "HTTP",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "options": [
                    "html",
                    "json"
                  ],
                  "label": "Response Type",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": null,
              "icon": "RiDownloadCloud2Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "type": "json"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1117.9231367091368,
            "y": 607.1593190523859
          },
          "__class__": "Node"
        },
        {
          "id": "c3b96d0b-8677-4bbb-ade6-22d369b49ef4",
          "position": {
            "x": 406.39782478999257,
            "y": 201.30197184704383
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Route",
            "events": null,
            "description": "### Description\nThe ROUTE component is used to create a web server listening on a specific address and a specific HTTP method.\n\n### Input\nThe component has no input.\n\n### Output\nIn this case there is no fixed output format.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "HTTP",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "path",
                  "type": "path",
                  "helper": "Insert a path without '/' at start"
                }
              ],
              "click": null,
              "icon": "RiCloudyFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "path": "entities"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 406.39782478999257,
            "y": 201.30197184704383
          },
          "__class__": "Node"
        },
        {
          "id": "ef85b1c6-dc05-46b7-b421-46898fd3838a",
          "position": {
            "x": 1299.6777658569463,
            "y": 204.57481307676096
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Response",
            "events": null,
            "description": "### Description\nThe RESPONSE component is used to set the type of response output that should be sent upon receipt of an HTTP request captured by a **Route** component.\n\n### Input\nIn this case there is no fixed input format.\n\n### Output\nThe component has no output.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [],
            "configured": true,
            "options": {
              "group": "HTTP",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "options": [
                    "html",
                    "json"
                  ],
                  "label": "Response Type",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": null,
              "icon": "RiDownloadCloud2Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "type": "json"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1299.6777658569463,
            "y": 204.57481307676096
          },
          "__class__": "Node"
        },
        {
          "id": "4726697f-ec88-4fe0-9a92-b27838b14d60",
          "position": {
            "x": 616.8767646216035,
            "y": 201.48674497847986
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "propagate": true,
                "notify_warnings": true,
                "code": "return data.json"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 616.8767646216035,
            "y": 201.48674497847986
          },
          "__class__": "Node"
        },
        {
          "id": "4ba19e80-42e1-4a4d-951e-154f5c3be05e",
          "position": {
            "x": 381.39782478999257,
            "y": 158.92745861471968
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 1100.4750456902043,
          "height": 136,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "Extract entities from text",
            "fill": "#F74B65",
            "height": 136,
            "width": 1100.4750456902043
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "positionAbsolute": {
            "x": 381.39782478999257,
            "y": 158.92745861471968
          },
          "__class__": "Node"
        },
        {
          "id": "6ee8465a-84d9-413d-8862-f5f190f40dd1",
          "position": {
            "x": 383.78402044653706,
            "y": 569.0163086483793
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 924.1391162625997,
          "height": 136,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "Mask text",
            "fill": "#F74B65",
            "height": 136,
            "width": 924.1391162625997
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "__class__": "Node"
        },
        {
          "id": "d6955335-e56f-46c4-be9b-e774039f15c2",
          "position": {
            "x": 903.5737198396442,
            "y": 608.7194069053314
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "pname": "loko_anonymizer",
            "name": "Anonymizer",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "text",
                "label": "text",
                "service": "anonymize",
                "to": "output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "keep",
                  "type": "text",
                  "label": "keep",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Don't anonymize these entity types. One of 'CARDINAL', 'DATE', 'EVENT', 'FAC', 'GPE', 'LANGUAGE', 'LAW', 'LOC', 'MONEY', 'NORP', 'ORDINAL', 'ORG', 'PER', 'PERCENT', 'PRODUCT', 'QUANTITY', 'TIME', 'WORK_OF_ART'. Comma separated",
                  "validation": null
                },
                {
                  "name": "entities",
                  "type": "boolean",
                  "label": "entities",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Returns also extracted entities",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiFileLockLine",
              "values": {}
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 903.5737198396442,
            "y": 608.7194069053314
          },
          "__class__": "Node"
        },
        {
          "id": "480892a9-ae7d-4dd2-bd03-4685663e024c",
          "position": {
            "x": 845.1803217287143,
            "y": 204.65446543100285
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "pname": "loko_anonymizer",
            "name": "Anonymizer",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "text",
                "label": "text",
                "service": "anonymize",
                "to": "output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "keep",
                  "type": "text",
                  "label": "keep",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Don't anonymize these entity types. One of 'CARDINAL', 'DATE', 'EVENT', 'FAC', 'GPE', 'LANGUAGE', 'LAW', 'LOC', 'MONEY', 'NORP', 'ORDINAL', 'ORG', 'PER', 'PERCENT', 'PRODUCT', 'QUANTITY', 'TIME', 'WORK_OF_ART'. Comma separated",
                  "validation": null
                },
                {
                  "name": "entities",
                  "type": "boolean",
                  "label": "entities",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Returns also extracted entities",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiFileLockLine",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "keep": "",
                "entities": true
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 845.1803217287143,
            "y": 204.65446543100285
          },
          "__class__": "Node"
        },
        {
          "id": "1481b818-a854-4ef2-9462-1fe2cf6c0b20",
          "position": {
            "x": 1078.3514664840595,
            "y": 203.49396468531742
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Selector",
            "events": null,
            "description": "### Description\nThe SELECTOR component is used to select the value of one or more object keys. The required key/s are defined using the parameter **Keys**.\n\nIn order to add other keys you need to click on the **\"Add field\"** button.\n\nIf the field **Ignore Error** is toggled, missing keys are ignored.\n\nIt's also possible to select nested key, just by writing them in a *key* field, and seperating them using a full stop. Let's consider the object in the example below: if you want to have access to the content of the \"key3\" object, you need to use the following notation \"key1.key2.key3\".\n\n\n```json\n {\"key1\":{\"key2\":{\"key3\":[\"val1\", \"val2\", \"val3\"]}}} \n```\n\n\n\n### Input\n\nThe input consists of a dictionary.\n\n\n\n### Output\n\nThe output is the value of the required key of the dictionary received as input, if only one key is selected; otherwise it's an object which contains the keys specified and their value.\n",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "ignore_err",
                  "label": "Ignor Error",
                  "type": "boolean",
                  "description": "Choose whether to ignore error in case of a missing key or not"
                },
                {
                  "name": "exclude",
                  "label": "Exclude Keys",
                  "type": "boolean",
                  "description": "If enabled, the output contains the whole input object excluding the specified keys; otherwise, only the specified keys are returned"
                },
                {
                  "name": "keys",
                  "label": "Keys",
                  "type": "multiKeyValue",
                  "validation": {
                    "required": "Required field"
                  },
                  "description": "Name of the key/s to select from the incoming message",
                  "fields": [
                    {
                      "name": "k",
                      "placeholder": "key",
                      "validation": {
                        "required": "Required field"
                      }
                    }
                  ]
                }
              ],
              "click": null,
              "icon": "RiCursorFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "ignore_err": false,
                "exclude": false,
                "keys": [
                  {
                    "k": "entities",
                    "id": "0c03de2e-2e6f-45b8-8e5b-2990956f7072"
                  }
                ]
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1078.3514664840595,
            "y": 203.49396468531742
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-1e25f288-c431-418e-91e2-09a90940fb05output-35fa6559-7516-4442-8adc-4152e7853020input",
          "source": "1e25f288-c431-418e-91e2-09a90940fb05",
          "sourceHandle": "output",
          "target": "35fa6559-7516-4442-8adc-4152e7853020",
          "targetHandle": "input",
          "data": {
            "startColor": "#56A6DC",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-c3b96d0b-8677-4bbb-ade6-22d369b49ef4output-4726697f-ec88-4fe0-9a92-b27838b14d60input",
          "source": "c3b96d0b-8677-4bbb-ade6-22d369b49ef4",
          "sourceHandle": "output",
          "target": "4726697f-ec88-4fe0-9a92-b27838b14d60",
          "targetHandle": "input",
          "data": {
            "startColor": "#56A6DC",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-35fa6559-7516-4442-8adc-4152e7853020output-d6955335-e56f-46c4-be9b-e774039f15c2text",
          "source": "35fa6559-7516-4442-8adc-4152e7853020",
          "sourceHandle": "output",
          "target": "d6955335-e56f-46c4-be9b-e774039f15c2",
          "targetHandle": "text",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-d6955335-e56f-46c4-be9b-e774039f15c2output-d38f454b-a99f-4136-84e1-111e289b5bb1input",
          "source": "d6955335-e56f-46c4-be9b-e774039f15c2",
          "sourceHandle": "output",
          "target": "d38f454b-a99f-4136-84e1-111e289b5bb1",
          "targetHandle": "input",
          "data": {
            "startColor": "#888",
            "stopColor": "#56A6DC"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-4726697f-ec88-4fe0-9a92-b27838b14d60output-480892a9-ae7d-4dd2-bd03-4685663e024ctext",
          "source": "4726697f-ec88-4fe0-9a92-b27838b14d60",
          "sourceHandle": "output",
          "target": "480892a9-ae7d-4dd2-bd03-4685663e024c",
          "targetHandle": "text",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-480892a9-ae7d-4dd2-bd03-4685663e024coutput-1481b818-a854-4ef2-9462-1fe2cf6c0b20input",
          "source": "480892a9-ae7d-4dd2-bd03-4685663e024c",
          "sourceHandle": "output",
          "target": "1481b818-a854-4ef2-9462-1fe2cf6c0b20",
          "targetHandle": "input",
          "data": {
            "startColor": "#888",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-1481b818-a854-4ef2-9462-1fe2cf6c0b20output-ef85b1c6-dc05-46b7-b421-46898fd3838ainput",
          "source": "1481b818-a854-4ef2-9462-1fe2cf6c0b20",
          "sourceHandle": "output",
          "target": "ef85b1c6-dc05-46b7-b421-46898fd3838a",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#56A6DC"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    },
    "ingestion": {
      "nodes": [
        {
          "id": "dc00fb82-2b5c-4d7a-8d30-9955fffa8ec6",
          "position": {
            "x": 385,
            "y": 199
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "URL list",
                "debug": false,
                "type": "String",
                "value": "https://www.penalecontemporaneo.it/upload/8670-cass-412-19-bonaiuto.pdf\nhttps://www.asaps.it/downloads/files/sentenza%20Cassazione%203900%202021.pdf\nhttps://i2.res.24o.it/pdf2010/Editrice/ILSOLE24ORE/QUOTIDIANI_VERTICALI/Online/_Oggetti_Embedded/Documenti/2022/07/15/Cassazione_23608_2022.pdf"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 385,
            "y": 199
          },
          "__class__": "Node"
        },
        {
          "id": "5e1f9e4d-9c81-49a9-b0ad-8c14df5a1232",
          "position": {
            "x": 625,
            "y": 224
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "propagate": true,
                "notify_warnings": true,
                "code": "yield from data.split(\"\\n\")"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 625,
            "y": 224
          },
          "__class__": "Node"
        },
        {
          "id": "d98b5291-a12a-4d33-af9e-c02787356f82",
          "position": {
            "x": 790,
            "y": 314
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "pdf_reader",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "file",
                "label": "file",
                "service": "pdf/text",
                "to": "output"
              },
              {
                "id": "url",
                "label": "url",
                "service": "pdf/url",
                "to": "output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": null,
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                }
              ],
              "click": null,
              "icon": null,
              "values": {
                "debug": false
              }
            }
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 790,
            "y": 314
          },
          "__class__": "Node"
        },
        {
          "id": "6f08f8db-0df0-4479-9495-cbdf2da30a80",
          "position": {
            "x": 968,
            "y": 232
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Merge",
            "events": null,
            "description": "### Description\nThe MERGE component is used to merge the results of multiple components.\n\n### Input\nThe number of inputs is defined using the parameter *Inputs*.\n\n### Output\nIn output are returned dictionaries that have as keys the Inputs defined at the creation of the component and as values the elements received in input from the connected components.",
            "inputs": [
              {
                "label": "url",
                "id": "c98fc61c-96ff-4d8c-9b9b-53809a00d13b"
              },
              {
                "label": "text",
                "id": "d014a86b-e550-487e-b701-af77948763b4"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "inputs",
                  "label": "Inputs",
                  "type": "multiKeyValue",
                  "validation": {
                    "required": "Required field"
                  },
                  "fields": [
                    {
                      "name": "label",
                      "placeholder": "Input",
                      "validation": {
                        "required": "Required field"
                      }
                    }
                  ]
                }
              ],
              "click": null,
              "icon": "RiGitMergeFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "inputs": [
                  {
                    "label": "url",
                    "id": "c98fc61c-96ff-4d8c-9b9b-53809a00d13b"
                  },
                  {
                    "label": "text",
                    "id": "d014a86b-e550-487e-b701-af77948763b4"
                  }
                ]
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 968,
            "y": 232
          },
          "__class__": "Node"
        },
        {
          "id": "04c21414-3ba0-4460-91b8-472ed546b46c",
          "position": {
            "x": 952,
            "y": 460
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 206,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "Remove db entries",
                "debug": false,
                "type": "Object",
                "value": "{}"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 952,
            "y": 460
          },
          "__class__": "Node"
        },
        {
          "id": "e59b906c-0232-4235-847b-68e0f2ccc951",
          "position": {
            "x": 342,
            "y": 164
          },
          "type": "comment",
          "dragHandle": "#commentHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 1135,
          "height": 440,
          "selected": false,
          "dragging": false,
          "data": {
            "comment": "Extract text from URL list and ingest into DB",
            "fill": "#F74B65",
            "height": 440,
            "width": 1135
          },
          "zIndex": -1,
          "selectable": false,
          "connectable": false,
          "__class__": "Node"
        },
        {
          "id": "620f9c05-049d-4d1b-82be-d76bc2f226bc",
          "position": {
            "x": 1226,
            "y": 241
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 164,
          "height": 80,
          "selected": false,
          "dragging": false,
          "data": {
            "pname": "mongo_extension",
            "name": "Mongo_insert",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "insert",
                "label": "insert",
                "service": "",
                "to": "output"
              },
              {
                "id": "query",
                "label": "query",
                "service": "query",
                "to": "query_output"
              },
              {
                "id": "list",
                "label": "list",
                "service": "list",
                "to": "list_output"
              },
              {
                "id": "delete",
                "label": "delete",
                "service": "delete",
                "to": "delete_output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              },
              {
                "id": "query_output",
                "label": "query_output"
              },
              {
                "id": "list_output",
                "label": "list_output"
              },
              {
                "id": "delete_output",
                "label": "delete_output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "collection",
                  "type": "text",
                  "label": "Collection name",
                  "helper": "Specify the mongo collection name"
                },
                {
                  "name": "stream",
                  "type": "boolean",
                  "label": "Stream or not results",
                  "helper": "Stream "
                }
              ],
              "click": null,
              "icon": null,
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "collection": "sentences",
                "stream": true
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1226,
            "y": 241
          },
          "__class__": "Node"
        },
        {
          "id": "93b98df7-8c26-4e71-852e-42fadf7ac7c4",
          "position": {
            "x": 1240,
            "y": 476
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 164,
          "height": 80,
          "selected": false,
          "dragging": false,
          "data": {
            "pname": "mongo_extension",
            "name": "Mongo_insert",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "insert",
                "label": "insert",
                "service": "",
                "to": "output"
              },
              {
                "id": "query",
                "label": "query",
                "service": "query",
                "to": "query_output"
              },
              {
                "id": "list",
                "label": "list",
                "service": "list",
                "to": "list_output"
              },
              {
                "id": "delete",
                "label": "delete",
                "service": "delete",
                "to": "delete_output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              },
              {
                "id": "query_output",
                "label": "query_output"
              },
              {
                "id": "list_output",
                "label": "list_output"
              },
              {
                "id": "delete_output",
                "label": "delete_output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "collection",
                  "type": "text",
                  "label": "Collection name",
                  "helper": "Specify the mongo collection name"
                },
                {
                  "name": "stream",
                  "type": "boolean",
                  "label": "Stream or not results",
                  "helper": "Stream "
                }
              ],
              "click": null,
              "icon": null,
              "values": {
                "comment": "",
                "alias": "DB Masked",
                "debug": true,
                "collection": "sentences_masked",
                "stream": true
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1240,
            "y": 476
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-dc00fb82-2b5c-4d7a-8d30-9955fffa8ec6output-5e1f9e4d-9c81-49a9-b0ad-8c14df5a1232input",
          "source": "dc00fb82-2b5c-4d7a-8d30-9955fffa8ec6",
          "sourceHandle": "output",
          "target": "5e1f9e4d-9c81-49a9-b0ad-8c14df5a1232",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-5e1f9e4d-9c81-49a9-b0ad-8c14df5a1232output-d98b5291-a12a-4d33-af9e-c02787356f82url",
          "source": "5e1f9e4d-9c81-49a9-b0ad-8c14df5a1232",
          "sourceHandle": "output",
          "target": "d98b5291-a12a-4d33-af9e-c02787356f82",
          "targetHandle": "url",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-5e1f9e4d-9c81-49a9-b0ad-8c14df5a1232output-6f08f8db-0df0-4479-9495-cbdf2da30a80c98fc61c-96ff-4d8c-9b9b-53809a00d13b",
          "source": "5e1f9e4d-9c81-49a9-b0ad-8c14df5a1232",
          "sourceHandle": "output",
          "target": "6f08f8db-0df0-4479-9495-cbdf2da30a80",
          "targetHandle": "c98fc61c-96ff-4d8c-9b9b-53809a00d13b",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-d98b5291-a12a-4d33-af9e-c02787356f82output-6f08f8db-0df0-4479-9495-cbdf2da30a80d014a86b-e550-487e-b701-af77948763b4",
          "source": "d98b5291-a12a-4d33-af9e-c02787356f82",
          "sourceHandle": "output",
          "target": "6f08f8db-0df0-4479-9495-cbdf2da30a80",
          "targetHandle": "d014a86b-e550-487e-b701-af77948763b4",
          "data": {
            "startColor": "#888",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-6f08f8db-0df0-4479-9495-cbdf2da30a80output-620f9c05-049d-4d1b-82be-d76bc2f226bcinsert",
          "source": "6f08f8db-0df0-4479-9495-cbdf2da30a80",
          "sourceHandle": "output",
          "target": "620f9c05-049d-4d1b-82be-d76bc2f226bc",
          "targetHandle": "insert",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-04c21414-3ba0-4460-91b8-472ed546b46coutput-620f9c05-049d-4d1b-82be-d76bc2f226bcdelete",
          "source": "04c21414-3ba0-4460-91b8-472ed546b46c",
          "sourceHandle": "output",
          "target": "620f9c05-049d-4d1b-82be-d76bc2f226bc",
          "targetHandle": "delete",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-04c21414-3ba0-4460-91b8-472ed546b46coutput-93b98df7-8c26-4e71-852e-42fadf7ac7c4delete",
          "source": "04c21414-3ba0-4460-91b8-472ed546b46c",
          "sourceHandle": "output",
          "target": "93b98df7-8c26-4e71-852e-42fadf7ac7c4",
          "targetHandle": "delete",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    },
    "pdf": {
      "nodes": [
        {
          "id": "67ffdb9c-dc76-4dd2-b2a8-2d4fbc26088d",
          "position": {
            "x": 603.9275065261751,
            "y": 261.807716168315
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Route",
            "events": null,
            "description": "### Description\nThe ROUTE component is used to create a web server listening on a specific address and a specific HTTP method.\n\n### Input\nThe component has no input.\n\n### Output\nIn this case there is no fixed output format.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "HTTP",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "path",
                  "type": "path",
                  "helper": "Insert a path without '/' at start"
                }
              ],
              "click": null,
              "icon": "RiCloudyFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "path": "pdf/text"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 603.9275065261751,
            "y": 261.807716168315
          },
          "__class__": "Node"
        },
        {
          "id": "52ef1bbf-a3e9-47d9-8e4b-af7c6bc08822",
          "position": {
            "x": 1376.8597449768658,
            "y": 244.19467857458494
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Response",
            "events": null,
            "description": "### Description\nThe RESPONSE component is used to set the type of response output that should be sent upon receipt of an HTTP request captured by a **Route** component.\n\n### Input\nIn this case there is no fixed input format.\n\n### Output\nThe component has no output.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [],
            "configured": true,
            "options": {
              "group": "HTTP",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "options": [
                    "html",
                    "json"
                  ],
                  "label": "Response Type",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": null,
              "icon": "RiDownloadCloud2Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "type": "json"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1376.8597449768658,
            "y": 244.19467857458494
          },
          "__class__": "Node"
        },
        {
          "id": "7cd7a50c-b0a3-455b-aad1-be28f4428462",
          "position": {
            "x": 843.6921187717647,
            "y": 261.39281606119494
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "propagate": true,
                "notify_warnings": true,
                "code": "import urllib.parse\nreturn urllib.parse.quote(data.args.get(\"url\"))"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 843.6921187717647,
            "y": 261.39281606119494
          },
          "__class__": "Node"
        },
        {
          "id": "c26a45ab-bd92-4263-994c-a9b970c82a0d",
          "position": {
            "x": 1160,
            "y": 269
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "pdf_reader",
            "events": null,
            "description": "",
            "inputs": [
              {
                "id": "file",
                "label": "file",
                "service": "pdf/text",
                "to": "output"
              },
              {
                "id": "url",
                "label": "url",
                "service": "pdf/url",
                "to": "output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                }
              ],
              "click": null,
              "icon": "RiCheckboxBlankCircleFill",
              "values": {}
            }
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1160,
            "y": 269
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-67ffdb9c-dc76-4dd2-b2a8-2d4fbc26088doutput-7cd7a50c-b0a3-455b-aad1-be28f4428462input",
          "source": "67ffdb9c-dc76-4dd2-b2a8-2d4fbc26088d",
          "sourceHandle": "output",
          "target": "7cd7a50c-b0a3-455b-aad1-be28f4428462",
          "targetHandle": "input",
          "data": {
            "startColor": "#56A6DC",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-7cd7a50c-b0a3-455b-aad1-be28f4428462output-c26a45ab-bd92-4263-994c-a9b970c82a0durl",
          "source": "7cd7a50c-b0a3-455b-aad1-be28f4428462",
          "sourceHandle": "output",
          "target": "c26a45ab-bd92-4263-994c-a9b970c82a0d",
          "targetHandle": "url",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-c26a45ab-bd92-4263-994c-a9b970c82a0doutput-52ef1bbf-a3e9-47d9-8e4b-af7c6bc08822input",
          "source": "c26a45ab-bd92-4263-994c-a9b970c82a0d",
          "sourceHandle": "output",
          "target": "52ef1bbf-a3e9-47d9-8e4b-af7c6bc08822",
          "targetHandle": "input",
          "data": {
            "startColor": "#888",
            "stopColor": "#56A6DC"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    }
  },
  "open": [
    "main"
  ],
  "active": "main",
  "version": "1.0.0",
  "__class__": "Project"
}